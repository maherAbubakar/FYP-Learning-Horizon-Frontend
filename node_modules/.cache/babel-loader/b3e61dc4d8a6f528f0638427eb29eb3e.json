{"ast":null,"code":"\"use strict\";\n\nimport _toConsumableArray from \"E:\\\\Final year project\\\\Scheduling\\\\frontend\\\\Learning-Horizon-Front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"E:\\\\Final year project\\\\Scheduling\\\\frontend\\\\Learning-Horizon-Front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\Final year project\\\\Scheduling\\\\frontend\\\\Learning-Horizon-Front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\Final year project\\\\Scheduling\\\\frontend\\\\Learning-Horizon-Front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\Final year project\\\\Scheduling\\\\frontend\\\\Learning-Horizon-Front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\Final year project\\\\Scheduling\\\\frontend\\\\Learning-Horizon-Front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\Final year project\\\\Scheduling\\\\frontend\\\\Learning-Horizon-Front-end\\\\src\\\\App\\\\layout\\\\AdminLayout\\\\NavBar\\\\NavLeft\\\\index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport windowSize from 'react-window-size';\nimport NavSearch from './NavSearch';\nimport Aux from \"../../../../../hoc/_Aux\";\nimport DEMO from \"../../../../../store/constant\";\nimport * as actionTypes from \"../../../../../store/actions\";\n\nvar NavLeft =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NavLeft, _Component);\n\n  function NavLeft() {\n    _classCallCheck(this, NavLeft);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(NavLeft).apply(this, arguments));\n  }\n\n  _createClass(NavLeft, [{\n    key: \"render\",\n    value: function render() {\n      var iconFullScreen = ['feather'];\n      iconFullScreen = this.props.isFullScreen ? [].concat(_toConsumableArray(iconFullScreen), ['icon-minimize']) : [].concat(_toConsumableArray(iconFullScreen), ['icon-maximize']);\n      var navItemClass = ['nav-item'];\n\n      if (this.props.windowWidth <= 575) {\n        navItemClass = [].concat(_toConsumableArray(navItemClass), ['d-none']);\n      }\n\n      var dropdownRightAlign = false;\n\n      if (this.props.rtlLayout) {\n        dropdownRightAlign = true;\n      }\n\n      return React.createElement(Aux, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"navbar-nav mr-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: DEMO.BLANK_LINK,\n        className: \"full-screen\",\n        onClick: this.props.onFullScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: iconFullScreen.join(' '),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }))), React.createElement(\"li\", {\n        className: \"nav-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(NavSearch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return NavLeft;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isFullScreen: state.isFullScreen,\n    rtlLayout: state.rtlLayout\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onFullScreen: function onFullScreen() {\n      return dispatch({\n        type: actionTypes.FULL_SCREEN\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(windowSize(NavLeft));","map":{"version":3,"sources":["E:\\Final year project\\Scheduling\\frontend\\Learning-Horizon-Front-end\\src\\App\\layout\\AdminLayout\\NavBar\\NavLeft\\index.js"],"names":["React","Component","connect","windowSize","NavSearch","Aux","DEMO","actionTypes","NavLeft","iconFullScreen","props","isFullScreen","navItemClass","windowWidth","dropdownRightAlign","rtlLayout","BLANK_LINK","onFullScreen","join","mapStateToProps","state","mapDispatchToProps","dispatch","type","FULL_SCREEN"],"mappings":"AAAA;;;;;;;;;AACA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,GAAP,MAAgB,yBAAhB;AACA,OAAOC,IAAP,MAAiB,+BAAjB;AACA,OAAO,KAAKC,WAAZ,MAA6B,8BAA7B;;IAEMC,O;;;;;;;;;;;;;6BAEO;AACL,UAAIC,cAAc,GAAG,CAAC,SAAD,CAArB;AACAA,MAAAA,cAAc,GAAI,KAAKC,KAAL,CAAWC,YAAZ,gCAAgCF,cAAhC,IAAgD,eAAhD,kCAAuEA,cAAvE,IAAuF,eAAvF,EAAjB;AAEA,UAAIG,YAAY,GAAG,CAAC,UAAD,CAAnB;;AACA,UAAI,KAAKF,KAAL,CAAWG,WAAX,IAA0B,GAA9B,EAAmC;AAC/BD,QAAAA,YAAY,gCAAOA,YAAP,IAAqB,QAArB,EAAZ;AACH;;AACD,UAAIE,kBAAkB,GAAG,KAAzB;;AACA,UAAI,KAAKJ,KAAL,CAAWK,SAAf,EAA0B;AACtBD,QAAAA,kBAAkB,GAAG,IAArB;AACH;;AAGD,aACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAG,QAAA,IAAI,EAAER,IAAI,CAACU,UAAd;AAA0B,QAAA,SAAS,EAAC,aAApC;AAAkD,QAAA,OAAO,EAAE,KAAKN,KAAL,CAAWO,YAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoF;AAAG,QAAA,SAAS,EAAER,cAAc,CAACS,IAAf,CAAoB,GAApB,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAApF,CAAJ,CADJ,EAGI;AAAI,QAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAzB,CAHJ,CADJ,CADJ;AASH;;;;EAzBiBjB,S;;AA4BtB,IAAMkB,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC7B,SAAO;AACHT,IAAAA,YAAY,EAAES,KAAK,CAACT,YADjB;AAEHI,IAAAA,SAAS,EAAEK,KAAK,CAACL;AAFd,GAAP;AAIH,CALD;;AAOA,IAAMM,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACnC,SAAO;AACHL,IAAAA,YAAY,EAAE;AAAA,aAAMK,QAAQ,CAAC;AAACC,QAAAA,IAAI,EAAEhB,WAAW,CAACiB;AAAnB,OAAD,CAAd;AAAA;AADX,GAAP;AAGH,CAJD;;AAMA,eAAetB,OAAO,CAACiB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6ClB,UAAU,CAACK,OAAD,CAAvD,CAAf","sourcesContent":["\"use strict\"\r\nimport React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport windowSize from 'react-window-size';\r\n\r\nimport NavSearch from './NavSearch';\r\nimport Aux from \"../../../../../hoc/_Aux\";\r\nimport DEMO from \"../../../../../store/constant\";\r\nimport * as actionTypes from \"../../../../../store/actions\";\r\n\r\nclass NavLeft extends Component {\r\n\r\n    render() {\r\n        let iconFullScreen = ['feather'];\r\n        iconFullScreen = (this.props.isFullScreen) ? [...iconFullScreen, 'icon-minimize'] : [...iconFullScreen, 'icon-maximize'];\r\n\r\n        let navItemClass = ['nav-item'];\r\n        if (this.props.windowWidth <= 575) {\r\n            navItemClass = [...navItemClass, 'd-none'];\r\n        }\r\n        let dropdownRightAlign = false;\r\n        if (this.props.rtlLayout) {\r\n            dropdownRightAlign = true;\r\n        }\r\n\r\n\r\n        return (\r\n            <Aux>\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li><a href={DEMO.BLANK_LINK} className=\"full-screen\" onClick={this.props.onFullScreen}><i className={iconFullScreen.join(' ')} /></a></li>\r\n \r\n                    <li className=\"nav-item\"><NavSearch/></li>\r\n                </ul>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isFullScreen: state.isFullScreen,\r\n        rtlLayout: state.rtlLayout\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFullScreen: () => dispatch({type: actionTypes.FULL_SCREEN}),\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(windowSize(NavLeft));\r\n"]},"metadata":{},"sourceType":"module"}